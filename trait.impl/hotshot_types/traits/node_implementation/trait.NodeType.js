(function() {
    var implementors = Object.fromEntries([["espresso_types",[["impl <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a> for <a class=\"struct\" href=\"espresso_types/v0/struct.SeqTypes.html\" title=\"struct espresso_types::v0::SeqTypes\">SeqTypes</a>"]]],["hotshot_example_types",[["impl <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a> for <a class=\"struct\" href=\"hotshot_example_types/node_types/struct.TestConsecutiveLeaderTypes.html\" title=\"struct hotshot_example_types::node_types::TestConsecutiveLeaderTypes\">TestConsecutiveLeaderTypes</a>"],["impl <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a> for <a class=\"struct\" href=\"hotshot_example_types/node_types/struct.TestTwoStakeTablesTypes.html\" title=\"struct hotshot_example_types::node_types::TestTwoStakeTablesTypes\">TestTwoStakeTablesTypes</a>"],["impl <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a> for <a class=\"struct\" href=\"hotshot_example_types/node_types/struct.TestTypes.html\" title=\"struct hotshot_example_types::node_types::TestTypes\">TestTypes</a>"],["impl <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a> for <a class=\"struct\" href=\"hotshot_example_types/node_types/struct.TestTypesEpochCatchupTypes.html\" title=\"struct hotshot_example_types::node_types::TestTypesEpochCatchupTypes\">TestTypesEpochCatchupTypes</a>"],["impl <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a> for <a class=\"struct\" href=\"hotshot_example_types/node_types/struct.TestTypesRandomizedLeader.html\" title=\"struct hotshot_example_types::node_types::TestTypesRandomizedLeader\">TestTypesRandomizedLeader</a>"],["impl&lt;CONFIG: <a class=\"trait\" href=\"hotshot/traits/election/helpers/trait.QuorumFilterConfig.html\" title=\"trait hotshot::traits::election::helpers::QuorumFilterConfig\">QuorumFilterConfig</a>&gt; <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a> for <a class=\"struct\" href=\"hotshot_example_types/node_types/struct.TestTypesRandomizedCommitteeMembers.html\" title=\"struct hotshot_example_types::node_types::TestTypesRandomizedCommitteeMembers\">TestTypesRandomizedCommitteeMembers</a>&lt;CONFIG&gt;"]]],["hotshot_query_service",[["impl <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a> for <a class=\"struct\" href=\"hotshot_query_service/testing/mocks/struct.MockTypes.html\" title=\"struct hotshot_query_service::testing::mocks::MockTypes\">MockTypes</a>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[331,2575,379]}